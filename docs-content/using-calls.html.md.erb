---
title: Using Scheduler for PCF
owner: PCF Autoscaler and Scheduler
---

This topic provides instructions for using Scheduler for Pivotal Cloud Foundry (PCF). The service enables ad hoc and scheduled execution of PCF tasks.

You can interact with the service through the Cloud Foundry Command Line Interface (cf CLI) tool or the [Apps Manager](http://docs.pivotal.io/pivotalcf/console/dev-console.html) UI.

For general information, see [Managing Service Instances with the cf CLI](http://docs.pivotal.io/devguide/services/managing-services.html). 

See the following example:

## <a id="manage-calls"></a>Manage Calls

See the following sections to learn about the Calls related operations you can perform with Scheduler for PCF.

### <a id="create-calls"></a>Create a New Call

To execute tasks related to an app, create a new call by running `cf create-call APP-NAME CALL-NAME URL`:

  * `APP-NAME` is the app you want to execute a task against.
  * `CALL-NAME` is the name for your call.
  * `URL` is the URL to execue a HTTP POST against.
    
See the following example:

<pre class="terminal">
 $ cf create-call my-app my-call "pwd"<br>
 Creating call my-call for my-app with command pwd in org my-org / space my-space as user<span>@</span>example.com...
 Call Name   App Name        URL
 my-call     my-app          https://your-domain
 OK
</pre>

### <a id="list-calls"></a>List Calls

Use the cf CLI to list all calls in a space by running `cf calls`. See the following example:

<pre class="terminal">
$ cf calls<br>
Listing calls for org my-org / space my-space as user<span>@</span>example.com...
Call Name    App Name        URL
my-call      my-app          https://your-domain
OK
</pre>

### <a id="exec-calls"></a>Execute a Call

You can execute a call manually. This is often useful to test the proper configuration of a call prior to scheduling it for recurring execution.

Run `cf run-call CALL-NAME`. See the following example:

<pre class="terminal">
$ cf run-call my-call<br>
Enqueuing call my-call for app my-app in org my-org / space my-space as user<span>@</span>example.com...
OK
</pre>

### <a id="call-history"></a>View Call History

You can review call history by running `cf call-history CALL-NAME`:

<pre class="terminal">
$ cf call-history my-call<br>
Getting scheduled call history for my-call in org my-org / space my-space as user<span>@</span>example.com...
1 - 1 of 1 Total Results
Execution GUID                     Execution State   Scheduled Time                  Execution Start Time            Execution End Time              Exit Message
d288a4ba-e0bc-48c9-969c-6ee79e380b20   SUCCEEDED         Mon, 16 Oct 2017 12:10:55 UTC   Mon, 16 Oct 2017 12:10:55 UTC   Mon, 16 Oct 2017 12:10:55 UTC   201 - Created
</pre>  

### <a id="schedule-call"></a>Schedule a Call

You can schedule a call to execute at any time using a schedule expression. Scheduler for PCF requires cron expressions in the `MIN HOUR DAY-OF-MONTH MONTH DAY-OF-WEEK` format.

For example, to execute a call at noon every day, run the following command:

<pre class="terminal">$ cf schedule-call my-call "0 12 ? * * "</pre>

A single call can have multiple schedules. Each schedule has a GUID to help distinguish it from similar schedules.

### <a id="view-schedules"></a>View Schedules for Calls

You can review schedules for all calls in a space by running `cf call-schedules`. See the following example:

<pre class="terminal">
$ cf call-schedules <br>
Getting scheduled calls for org my-org / space my-space as user<span>@</span>example.com...
App Name: my-app
my-call        
                    2b69e0c2-9664-46bb-4817-54afcedbb65d   0 12 ? * *
OK
</pre>

### <a id="delete-schedule"></a>Delete a Call Schedule  

You can delete a specific schedule by running `cf delete-call-schedule SCHEDULE_GUID`, where `SCHEDULE_GUID` is the GUID found in the output of the `call-schedules` command. See the following example:

<pre class="terminal">
$ cf delete-call-schedule 2b69e0c2-9664-46bb-4817-54afcedbb65d<br>
Really delete the schedule 2b69e0c2-9664-46bb-4817-54afcedbb65d / 0 12 ? * * and all associated history?> [yN]: y
OK
</pre>	

### <a id="delete-call"></a>Delete a Call

You can delete a call by running `cf delete-call CALL_NAME`. See the following example:

<pre class="terminal">
$ cf delete-call my-call<br>
Really delete the call my-call with url https://your-domain and all associated schedules and history?> [yN]:y
OK
</pre>
